<?php
/**
 * @file
 * Handles update tasks for the module. 
 */

/**
 * Remove obsolete menu.
 */
function ding_page_update_7001() {
  $menu = menu_load('menu-sider');
  menu_delete($menu);
  return t('Pages menu deleted.');
}

/**
 * Remove old ting reference field table from page. 
 */
function ding_page_update_7002() {
  // The tables are left over after change to virtual field, hence we have to
  // remove them the hard way without deleting the field.
  db_drop_table('field_data_field_ding_page_materials');
  db_drop_table('field_revision_field_ding_page_materials');
}


/**
 * Remove old page path auto patterns.
 */
function ding_page_update_7003() {
  variable_del('pathauto_node_ding_page_da_pattern');
  variable_del('pathauto_node_ding_page_en_pattern');
  variable_del('pathauto_node_ding_page_und_pattern');
}

/**
 * Migrate page body field to paragraph and delete field.
 */
function ding_page_update_7004(&$sandbox) {
  // Make sure we have somewhere to save the old body field.
  if (empty(field_info_instance('node', 'field_ding_page_body', 'ding_page')) || empty(field_info_instance('paragraphs_item', 'field_ding_paragraphs_text', 'ding_paragraphs_text')) || empty(field_info_instance('node', 'field_ding_page_paragraphs', 'ding_page'))) {
    throw new DrupalUpdateException(t('This update requires the fields field_ding_paragraphs_text and field_ding_page_body to exist. Perhaps you need to revert a feature.'));
  }

  if (!isset($sandbox['total'])) {
    $query = db_select('field_data_field_ding_page_body', 'f');
    $query->fields('f');
    $result = $query->execute();
    $sandbox['total'] = $result->rowCount();
    $sandbox['current'] = 0;
  }

  $nodes_per_pass = 30;

  $query = db_select('field_data_field_ding_page_body', 'f');
  $query->fields('f');
  $query->range($sandbox['current'], $nodes_per_pass);
  $result = $query->execute();

  while ($value = $result->fetchAssoc()) {
    $node = node_load($value['entity_id']);
    $paragraph = new ParagraphsItemEntity(array('field_name' => 'field_ding_page_paragraphs', 'bundle' => 'ding_paragraphs_text'));
    $paragraph->is_new = TRUE;
    $paragraph->field_ding_paragraphs_text[$value['language']][0]['value'] = $value['field_ding_page_body_value'];
    $paragraph->field_ding_paragraphs_text[$value['language']][0]['format'] = $value['field_ding_page_body_format'];
    $paragraph->setHostEntity('node', $node);
    $paragraph->save();
    $sandbox['current']++;
  }

  $sandbox['#finished'] = ($sandbox['current'] / $sandbox['total']);

  if ($sandbox['#finished'] === 1) {
    drupal_set_message(t('We processed @nodes nodes. Deleting field_ding_page_body...', array('@nodes' => $sandbox['total'])));
    field_delete_field('field_ding_page_body');
    field_purge_batch(1);
  }
}